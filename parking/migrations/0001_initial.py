# Generated by Django 4.2 on 2025-10-26 15:07

import django.contrib.gis.db.models.fields
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='ParkingSpace',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('description', models.TextField()),
                ('address', models.CharField(max_length=500)),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326)),
                ('city', models.CharField(db_index=True, max_length=100)),
                ('area', models.CharField(max_length=100)),
                ('landmark', models.CharField(blank=True, max_length=200, null=True)),
                ('space_type', models.CharField(choices=[('garage', 'Garage'), ('open', 'Open Space'), ('covered', 'Covered Space'), ('private', 'Private Driveway')], max_length=20)),
                ('total_spaces', models.IntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('available_spaces', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)])),
                ('price_per_day', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_per_week', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_per_month', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('price_per_year', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('max_vehicle_height', models.FloatField(blank=True, null=True)),
                ('max_vehicle_length', models.FloatField(blank=True, null=True)),
                ('max_vehicle_width', models.FloatField(blank=True, null=True)),
                ('allowed_vehicle_types', models.CharField(max_length=200)),
                ('has_security_camera', models.BooleanField(default=False)),
                ('has_lighting', models.BooleanField(default=False)),
                ('has_ev_charging', models.BooleanField(default=False)),
                ('has_surveillance', models.BooleanField(default=False)),
                ('has_covered', models.BooleanField(default=False)),
                ('has_24_7_access', models.BooleanField(default=False)),
                ('status', models.CharField(choices=[('available', 'Available'), ('booked', 'Booked'), ('inactive', 'Inactive')], db_index=True, default='available', max_length=20)),
                ('available_from', models.TimeField()),
                ('available_until', models.TimeField()),
                ('accepted_payment_methods', models.CharField(max_length=100)),
                ('image', models.ImageField(upload_to='parking_spaces/')),
                ('additional_images', models.JSONField(default=list)),
                ('rating', models.DecimalField(decimal_places=2, default=0, max_digits=3)),
                ('total_bookings', models.IntegerField(default=0)),
                ('total_reviews', models.IntegerField(default=0)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ParkingSpaceImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to='parking_space_images/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('parking_space', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='parking.parkingspace')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
    ]
