# Generated by Django 4.2 on 2025-10-29 08:01

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('bookings', '0003_bookingpayout'),
        ('payments', '0002_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='CommissionDue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('due_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('commission_amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('is_settled', models.BooleanField(default=False)),
                ('due_date', models.DateField()),
                ('expected_payment_date', models.DateField()),
                ('actual_payment_date', models.DateTimeField(blank=True, null=True)),
                ('days_overdue', models.IntegerField(default=0)),
                ('aging_bucket', models.CharField(choices=[('0_30', '0-30 Days'), ('31_60', '31-60 Days'), ('61_90', '61-90 Days'), ('90_plus', '90+ Days')], default='0_30', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['due_date'],
            },
        ),
        migrations.CreateModel(
            name='CommissionSettings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('commission_percentage', models.DecimalField(decimal_places=2, default=10, help_text='Commission percentage (0-100%)', max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('minimum_commission', models.DecimalField(decimal_places=2, default=50, help_text='Minimum commission amount per transaction', max_digits=10)),
                ('payment_processing_fee', models.DecimalField(decimal_places=2, default=2.5, help_text='Additional processing fee percentage', max_digits=5)),
                ('due_days_threshold', models.IntegerField(default=30, help_text='Days before marking owner as having dues')),
                ('block_after_days', models.IntegerField(default=60, help_text='Days of dues before blocking owner')),
                ('block_dues_amount', models.DecimalField(decimal_places=2, default=10000, help_text='Block owner if dues exceed this amount', max_digits=10)),
                ('auto_settle_enabled', models.BooleanField(default=True, help_text='Auto settle dues from payments')),
                ('refund_days', models.IntegerField(default=7, help_text='Days within which refund can be processed')),
                ('refund_charges_percentage', models.DecimalField(decimal_places=2, default=2.0, help_text='Percentage charges for refund', max_digits=5)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name_plural': 'Commission Settings',
            },
        ),
        migrations.CreateModel(
            name='CommissionTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('transaction_type', models.CharField(choices=[('booking_commission', 'Booking Commission'), ('cod_collection', 'COD Collection'), ('razorpay_payment', 'Razorpay Payment'), ('due_settlement', 'Due Settlement'), ('adjustment', 'Manual Adjustment'), ('refund', 'Refund'), ('reversal', 'Reversal')], max_length=50)),
                ('booking_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('commission_percentage', models.DecimalField(decimal_places=2, default=0, max_digits=5)),
                ('commission_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('processing_fee', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('net_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('settled', 'Settled'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('reversed', 'Reversed')], default='pending', max_length=20)),
                ('notes', models.TextField(blank=True)),
                ('idempotency_key', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('settled_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OwnerCommissionAccount',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_earned', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('total_commission_deducted', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('current_balance', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('pending_dues', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('settled_dues', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('overdue_amount', models.DecimalField(decimal_places=2, default=0, max_digits=15)),
                ('account_status', models.CharField(choices=[('active', 'Active'), ('blocked', 'Blocked'), ('suspended', 'Suspended'), ('closed', 'Closed')], default='active', max_length=20)),
                ('is_blocked', models.BooleanField(default=False)),
                ('blocked_reason', models.CharField(blank=True, max_length=500)),
                ('blocked_at', models.DateTimeField(blank=True, null=True)),
                ('unblocked_at', models.DateTimeField(blank=True, null=True)),
                ('bank_account_number', models.CharField(blank=True, max_length=50, null=True)),
                ('bank_ifsc_code', models.CharField(blank=True, max_length=20, null=True)),
                ('bank_holder_name', models.CharField(blank=True, max_length=200, null=True)),
                ('bank_verified', models.BooleanField(default=False)),
                ('last_payout_date', models.DateTimeField(blank=True, null=True)),
                ('last_payout_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True)),
                ('tax_id_number', models.CharField(blank=True, help_text='PAN/TAN', max_length=50, null=True)),
                ('tax_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Owner Commission Account',
                'verbose_name_plural': 'Owner Commission Accounts',
            },
        ),
        migrations.CreateModel(
            name='PayoutRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=15)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('bank_account_number', models.CharField(max_length=50)),
                ('bank_ifsc_code', models.CharField(max_length=20)),
                ('bank_holder_name', models.CharField(max_length=200)),
                ('razorpay_payout_id', models.CharField(blank=True, max_length=100, null=True, unique=True)),
                ('gateway_response', models.JSONField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('rejection_reason', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AlterModelOptions(
            name='payment',
            options={'ordering': ['-created_at']},
        ),
        migrations.AlterModelOptions(
            name='refund',
            options={'ordering': ['-created_at']},
        ),
        migrations.AddField(
            model_name='payment',
            name='cod_due_amount',
            field=models.DecimalField(blank=True, decimal_places=2, max_digits=15, null=True),
        ),
        migrations.AddField(
            model_name='payment',
            name='cod_due_created',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='payment',
            name='commission_settled',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='payment',
            name='has_commission_applied',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='payment',
            name='idempotency_key',
            field=models.CharField(blank=True, max_length=100, null=True, unique=True),
        ),
        migrations.AddField(
            model_name='payment',
            name='settlement_date',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='refund',
            name='completed_at',
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='refund',
            name='net_refund_amount',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='refund',
            name='notes',
            field=models.TextField(blank=True),
        ),
        migrations.AddField(
            model_name='refund',
            name='refund_charges',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='refund',
            name='refunded_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='refunded_payments', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='payment',
            name='razorpay_order_id',
            field=models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='payment',
            name='razorpay_payment_id',
            field=models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='payment',
            name='status',
            field=models.CharField(choices=[('initiated', 'Initiated'), ('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('refunded', 'Refunded'), ('partially_refunded', 'Partially Refunded')], default='initiated', max_length=20),
        ),
        migrations.AlterField(
            model_name='refund',
            name='razorpay_refund_id',
            field=models.CharField(blank=True, max_length=100, null=True, unique=True),
        ),
        migrations.AlterField(
            model_name='refund',
            name='reason',
            field=models.CharField(choices=[('booking_cancelled', 'Booking Cancelled'), ('space_unavailable', 'Space Became Unavailable'), ('customer_request', 'Customer Request'), ('payment_error', 'Payment Error'), ('dispute_resolved', 'Dispute Resolved'), ('quality_issue', 'Quality/Service Issue')], max_length=50),
        ),
        migrations.AlterField(
            model_name='refund',
            name='status',
            field=models.CharField(choices=[('initiated', 'Initiated'), ('processing', 'Processing'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled')], default='initiated', max_length=20),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['booking'], name='payments_pa_booking_8fd3de_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['status'], name='payments_pa_status_7ad4af_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['payment_method'], name='payments_pa_payment_5c92d7_idx'),
        ),
        migrations.AddIndex(
            model_name='payment',
            index=models.Index(fields=['idempotency_key'], name='payments_pa_idempot_d55485_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['payment'], name='payments_re_payment_0f5ef3_idx'),
        ),
        migrations.AddIndex(
            model_name='refund',
            index=models.Index(fields=['status'], name='payments_re_status_715c3a_idx'),
        ),
        migrations.AddField(
            model_name='payoutrequest',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payout_requests', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='payoutrequest',
            name='processed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='processed_payouts', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='ownercommissionaccount',
            name='owner',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='commission_account', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commissiontransaction',
            name='booking',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commission_transaction', to='bookings.booking'),
        ),
        migrations.AddField(
            model_name='commissiontransaction',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commission_transactions', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commissiontransaction',
            name='payment',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='commission_transaction', to='payments.payment'),
        ),
        migrations.AddField(
            model_name='commissiondue',
            name='booking',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bookings.booking'),
        ),
        migrations.AddField(
            model_name='commissiondue',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='commission_dues', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='commissiondue',
            name='settled_via_transaction',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='settled_dues', to='payments.commissiontransaction'),
        ),
        migrations.AddIndex(
            model_name='payoutrequest',
            index=models.Index(fields=['owner', 'status'], name='payments_pa_owner_i_fe8ad1_idx'),
        ),
        migrations.AddIndex(
            model_name='payoutrequest',
            index=models.Index(fields=['created_at'], name='payments_pa_created_5ff0d4_idx'),
        ),
        migrations.AddIndex(
            model_name='ownercommissionaccount',
            index=models.Index(fields=['owner', 'is_blocked'], name='payments_ow_owner_i_9c57a0_idx'),
        ),
        migrations.AddIndex(
            model_name='ownercommissionaccount',
            index=models.Index(fields=['account_status'], name='payments_ow_account_e6fd46_idx'),
        ),
        migrations.AddIndex(
            model_name='ownercommissionaccount',
            index=models.Index(fields=['updated_at'], name='payments_ow_updated_5ecfd8_idx'),
        ),
        migrations.AddIndex(
            model_name='commissiontransaction',
            index=models.Index(fields=['owner', 'created_at'], name='payments_co_owner_i_a39790_idx'),
        ),
        migrations.AddIndex(
            model_name='commissiontransaction',
            index=models.Index(fields=['booking'], name='payments_co_booking_1e6ec3_idx'),
        ),
        migrations.AddIndex(
            model_name='commissiontransaction',
            index=models.Index(fields=['status'], name='payments_co_status_1c8973_idx'),
        ),
        migrations.AddIndex(
            model_name='commissiontransaction',
            index=models.Index(fields=['idempotency_key'], name='payments_co_idempot_d76473_idx'),
        ),
        migrations.AddIndex(
            model_name='commissiondue',
            index=models.Index(fields=['owner', 'is_settled'], name='payments_co_owner_i_6120c9_idx'),
        ),
        migrations.AddIndex(
            model_name='commissiondue',
            index=models.Index(fields=['due_date'], name='payments_co_due_dat_4d324d_idx'),
        ),
        migrations.AddIndex(
            model_name='commissiondue',
            index=models.Index(fields=['aging_bucket'], name='payments_co_aging_b_84f0e9_idx'),
        ),
    ]
